using System;
using System.Data.SqlClient;
using System.Data;
using System.Configuration;
using ean.edu.desarollo.web.objetos;
using ean.edu.desarrollo.net.persistencia.adonet.Interfaces;
using System.Collections.Generic;


namespace ean.edu.desarrollo.net.persistencia.adonet
{
    public class DetalleFacturaDB : AbstractCrud
    {


        #region Constructor
        public DetalleFacturaDB(SqlConnection pConnection, SqlTransaction pTransaction) : base(pConnection, pTransaction)
        {

        }

        public DetalleFacturaDB()
        {

        }
        #endregion
        #region propiedades

        private DetalleFactura _DetalleFactura;

        public DetalleFactura DetalleFactura
        {
            get
            {
                return _DetalleFactura;
            }

            set
            {
                _DetalleFactura = value;
            }
        }

        protected override string Insertar(ref SqlCommand cmd)
        {
            #region Insertar
            cmd.CommandText = "proDetalleFacturaInsertar";
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter IdentityParam = new SqlParameter("@IdDetalleFactura", SqlDbType.TinyInt);
            IdentityParam.Direction = ParameterDirection.Output;
            cmd.Parameters.Add(IdentityParam);
            cmd.Parameters.AddWithValue("@IdFactura", DetalleFactura.Factura.IdFactura);
            cmd.Parameters.AddWithValue("@IdServicio", DetalleFactura.Servicio.IdServicio);
            cmd.Parameters.AddWithValue("@CantidadConsumo", DetalleFactura.CantidadConsumo);
            cmd.Parameters.AddWithValue("@ValorConsumo", DetalleFactura.ValorConsumo);
            #endregion

            return "@IdFactura";
        }

        protected override void Modificar(ref SqlCommand cmd)
        {
            throw new NotImplementedException();
        }

        protected override void Eliminar(ref SqlCommand cmd)
        {
            throw new NotImplementedException();
        }

        protected override void SeleccionarTodos(ref SqlCommand cmd)
        {
            throw new NotImplementedException();
        }

        protected override void SeleccionarId(ref SqlCommand cmd, object id)
        {
            throw new NotImplementedException();
        }

        protected override object ConstruirListado(SqlDataReader reader)
        {
            throw new NotImplementedException();
        }

        protected override object ConstruirObjeto(SqlDataReader reader)
        {
            throw new NotImplementedException();
        }

        #endregion

    }
}
